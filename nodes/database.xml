<?xml version="1.0" standalone="no"?>

<kickstart>

  <description>

  NPACI Rocks Cluster Database. Includes client programs,
  python libraries, and Apache configuration.

  </description>

        <copyright>
        Copyright (c) 2000 - 2014 The Regents of the University of California.
        All rights reserved. Rocks(r) 6.2 www.rocksclusters.org
        
        </copyright>

  <changelog>
  $Log: database.xml,v $
  Revision 1.36  2013/01/17 17:32:47  clem
  removing /opt/rocks/lib/mysql from the global ld.so.conf

  we used the local rpath in all the foundation mysql binaries so we dont need
  any more the file in /etc/ld.so.conf.d/foundation-mysql.conf

  Tested on rocks 6.1 (need to test on rocks 5)

  Revision 1.35  2012/05/06 05:48:10  phil
  Copyright Storm for Mamba

  Revision 1.34  2011/07/23 02:30:14  phil
  Viper Copyright

  Revision 1.33  2011/05/10 00:53:13  anoop
  Moved grants for apache to a python script

  Revision 1.32  2010/09/07 23:52:46  bruno
  star power for gb

  Revision 1.31  2010/07/31 01:02:02  bruno
  first stab at putting in 'shadow' values in the database that non-root
  and non-apache users can't read

  Revision 1.30  2009/05/20 23:00:29  anoop
  Bug fix. ldconfig needed to be run before any mysql commands
  Otherwise the database accesses would fail, no data would ever
  be put into the database, and the frontend installation would
  fail spectacularly.

  Revision 1.29  2009/05/20 12:12:00  mjk
  nodes have RO access to DB

  Revision 1.28  2009/05/16 02:10:50  anoop
  Moved from RedHat MySQL to Rocks foundation-mysql
  rather forcefully.

  Turned off RedHat MySQL and cleanup of node xml files
  to remove all access to RedHat MySQL.

  Wordpress data and generic php mysql accesses are now
  directed to foundation-mysql. Here's hoping we got all
  of it.

  Revision 1.27  2009/05/01 19:06:48  mjk
  chimi con queso

  Revision 1.26  2009/04/29 20:17:18  mjk
  open perm so everyone can connect to mysql.sock

  Revision 1.25  2009/04/23 23:46:11  mjk
  new foundation mysql needs --password flag

  Revision 1.24  2009/04/22 20:25:55  bruno
  - fix name to foundation mysql init script
  - labels are dead

  Revision 1.23  2009/04/22 17:02:32  bruno
  update path

  Revision 1.22  2009/04/21 23:59:55  mjk
  start foundation-mysql

  Revision 1.21  2009/04/21 23:04:08  mjk
  - start the foundation-mysql DB and put tables there also
  - move sunos stuff out to generic
  - kill phpmyadmin stuff
  - next step is to move to foundation-mysql for the rocks command line
  - original mysql DB is still used and works for now

  Revision 1.20  2009/04/20 21:50:53  bruno
  labels are dead

  Revision 1.19  2009/03/31 00:23:29  anoop
  Merged the remainder of the solaris XML files to the base roll

  Revision 1.18  2009/03/24 22:24:55  bruno
  got rid of the last dbreport - dbreport is now dead.

  Revision 1.17  2009/03/21 22:22:55  bruno
   - lights-out install of VM frontends with new node_rolls table
   - nuked 'site' columns and tables from database
   - worked through some bugs regarding entities

  Revision 1.16  2009/01/23 21:50:23  bruno
  var tags converted to entities

  Revision 1.15  2008/10/18 00:55:45  mjk
  copyright 5.1

  Revision 1.14  2008/03/06 23:41:30  mjk
  copyright storm on

  Revision 1.13  2007/08/14 19:20:07  bruno
  remove dead code

  remove the file that was used to access the database via the web on our
  old web site (prior to wordpress)

  Revision 1.12  2007/07/05 21:38:58  phil
  Run phpMyAdmin as user nobody. Allows the DB to be looked at, but not changed

  Revision 1.11  2007/07/05 20:23:45  bruno
  users can select

  Revision 1.10  2007/07/03 04:58:42  phil
  Add a password for apache access to the database.
  Randomly generate password and store in /root/.my.cnf.
  Modify rocks.py and sql.py to read the password, if available

  Revision 1.9  2007/06/23 04:03:18  mjk
  mars hill copyright

  Revision 1.8  2007/05/30 23:27:16  anoop
  Moved the security information that apache uses to log into mysql to the
  database.xml file.
  Schema changed slightly to clean column names

  Main changes are the use of command line tools to manipulate the database
  rather than using sql syntax directly. Still in beta stage.

  Revision 1.7  2006/07/07 13:17:02  bruno
  change mode to owner

  Revision 1.6  2006/07/06 23:53:17  bruno
  stripped out old upgrade procedure

  Revision 1.5  2006/06/06 00:48:18  anoop
  Change permissions of /var/www/html/labels to be owned by apache. Otherwise creation
  of labels.pdf is impossible.

  Revision 1.4  2006/06/02 22:16:46  anoop
  Undo changes on the database access schema.
  Add info stating that database can be accessed readonly from within the network
  Also from outside the network only root can access the database

  Revision 1.3  2006/06/01 21:58:26  anoop
  Changed phpMyAdmin access permissions

  Revision 1.2  2005/05/23 23:59:21  fds
  Frontend Restore

  Revision 1.1  2005/03/04 01:40:04  mjk
  massive graph cleanup

  Revision 1.1  2005/03/01 00:22:26  mjk
  moved to base roll

  Revision 1.7  2005/02/15 22:58:52  mjk
  dtd is gone

  Revision 1.6  2004/10/18 21:12:57  bruno
  really, really make sure mx is off on itanium

  Revision 1.5  2004/10/16 04:25:55  bruno
  on itaniums, mx causes dbreport to seg fault

  Revision 1.4  2004/07/16 11:42:15  bruno
  needed to quote the password setting for apache.

  this is releated to bug 11.

  Revision 1.3  2004/07/12 21:19:28  fds
  Apache security tweaks

  Revision 1.2  2004/04/26 20:27:56  fds
  Safer Mysql. As Eric D Christensen pointed out, it is easy for users to
  accidentally disrupt the system by altering the database. We protect from
  outside menaces, but allow read-write access to anyone from localhost.

  This protects read-write access with SSL and passwords, like our wiki. It
  is not close to being secure, since the -uapache is an option, but it
  1) Prevents accidental changes from users via the web-interface, and
  2) Allows admins to access the database safely over the wide-area.

  I have also made a read-only access link, which is accessible for all users
  but does not allow modification. In addition, users from localhost can
  get read-only access from the command line without specifying -uapache. This
  is intended to protect against casual mistakes only.

  Left to the next release: a secure and easy way for kcgi to access the
  database as user apache.

  Revision 1.1  2004/03/08 21:01:23  mjk
  *** empty log message ***

  Revision 1.32  2004/02/03 20:00:35  mjk
  decolorize

  Revision 1.31  2004/01/30 04:53:42  mjk
  colorize

  Revision 1.30  2003/07/16 20:10:41  bruno
  changed to new 'file' tag

  Revision 1.29  2003/07/07 20:09:15  bruno
  new for rolls

  Revision 1.28  2002/11/11 02:06:48  fds
  New style configuration for PhpMyAdmin.

  Revision 1.27  2002/10/19 02:54:51  bruno
  syntax error fix in php config

  Revision 1.26  2002/10/18 19:45:32  fds
  Further PHPMyAdmin configuration using awk.

  Revision 1.25  2002/10/16 16:39:34  bruno
  more fixes

  Revision 1.24  2002/10/09 23:16:27  bruno
  fixup of package names to match our new source tree

  Revision 1.23  2002/10/03 18:30:17  mjk
  add dbreport

  Revision 1.22  2002/08/16 00:38:08  bruno
  latest update changes

  Revision 1.21  2002/07/11 23:13:31  bruno
  fixed more 'frontend-0' hardcoded badness

  Revision 1.20  2002/07/03 23:33:11  bruno
  7.3 fixes

  Revision 1.19  2002/06/24 21:31:09  mjk
  Static cluster structure.
  Do not refer to live database for table structure.

  Revision 1.18  2002/06/11 20:20:28  mjk
  Added support for release tag

  Revision 1.17  2002/04/15 21:59:03  bruno
  fix for dhcp and start of ia64 tweaks

  Revision 1.16  2002/02/27 00:23:21  mjk
  Added WebForm to memberships table (we need it on all frontends)

  Revision 1.15  2002/02/25 19:51:50  mjk
  - Changed default kcgi membership from "External" to "Laptop"
  - Fixed NFS appliance default data
  - Added database access for frontend-0 (or whatever it's named)

  Revision 1.14  2002/02/25 17:27:30  bruno
  fixes for 2.2

  Revision 1.13  2002/02/15 21:44:09  mjk
  Release and DTF changes

  Revision 1.12  2002/02/14 18:47:18  mjk
  Table version numbers are no cumulative.  Add all tables with versions
  less than or equal to the version coded in this files.

  Revision 1.11  2002/02/14 02:12:29  mjk
  - Removed CD copy gui code from insert-ethers
  - Added CD copy code back to install.xml (using rocks-dist)
  - Added copycd command to rocks-dist
  - Added '-' packages logic to kgen
  - Other file changed to support above

  Revision 1.10  2002/02/05 22:38:46  mjk
  7.2

  Revision 1.9  2002/01/23 20:24:57  bruno
  added web page module (a link to the database now shows up in homepage)

  Revision 1.8  2002/01/18 23:27:32  bruno
  updates for 7.2

  Revision 1.7  2001/10/31 18:23:00  bruno
  removed 'Dead' membership

  removed 'i386' from distributions

  Revision 1.6  2001/10/31 00:35:10  bruno
  rocks v2.1.1 updates

  Revision 1.5  2001/10/18 20:06:45  mjk
  Changes groups table to memberships

  Revision 1.4  2001/10/17 17:27:18  mjk
  - Pull app_global table data

  Revision 1.3  2001/10/17 17:07:55  mjk
  uno mas

  Revision 1.2  2001/10/16 21:37:12  mjk
  - SQL table structure from live db, and some base data
  - fixed nisdomain stuff

  Revision 1.1  2001/10/05 18:59:49  mjk
  *** empty log message ***

  </changelog>

  <package os='linux'>rocks-sql</package>
  <package os='linux' cond="rocks_version_major == 6">mysql</package>
  <package os='linux' cond="rocks_version_major == 6">mysql-server</package>
  <package os='linux' cond="rocks_version_major == 6">mysql-devel</package>
  <package os='linux' cond="rocks_version_major == 7">mariadb</package>
  <package os='linux' cond="rocks_version_major == 7">mariadb-devel</package>
  <package os='linux'>perl</package>
  <package os='linux'>perl-Data-Dumper</package>
  <package os='linux'>perl-Getopt-Long</package>
  <package os='linux'>perl-Carp</package>
  <package os='linux'>perl-Exporter</package>
  <package os='linux'>perl-Scalar-List-Utils</package>
  <package os='linux'>perl-constant</package>
  <package os='linux'>MySQL-python</package>
  <package os='linux'>php-mysql</package>
  <package os='linux'>foundation-mysql</package>

  <package os="sunos">ROCKSfoundation-mysql</package>

<post>

<!--
	set the hostname to the private name. this helps the rocks command
	line find the host 'localhost' correctly
-->
/bin/hostname &hostname;
</post>


<!--
	Add the rocksdb user and group to the system.
	This is the user that will run the Rocks database.
	Also setup the correct directories and their
	permissions for running the database
-->
<post>
/usr/bin/getent group rocksdb &gt;/dev/null || /usr/sbin/groupadd -r rocksdb
/usr/bin/getent passwd rocksdb &gt;/dev/null || /usr/sbin/useradd -r -g rocksdb -d /var/opt/rocks/mysql -m -s /bin/false rocksdb

/opt/rocks/mysql/sbin/mysql-install-db

chgrp -R rocksdb /var/opt/rocks/mysql
chmod -R g+rwx   /var/opt/rocks/mysql
chmod a+rx /var/opt/rocks/mysql
</post>

<!--
	Setup foundation-mysql to startup at boot
	and start foundation-mysql database
-->
<post os='sunos'>
cp -f /opt/rocks/share/mysql/mysql-server.xml \
	/var/svc/manifest/network/mysql-server.xml
<service name='network/mysql' enabled='yes'/>

/lib/svc/method/mysqld start
</post>

<post os='linux'>
/sbin/chkconfig foundation-mysql on
/etc/rc.d/init.d/foundation-mysql start

</post>

<!--
	Make sure that the mysql database is
	up and running
-->
<post>
/opt/rocks/mysql/bin/mysqladmin -s ping > /dev/null
while [ $? -eq 1 ]; do
        sleep 1
        /opt/rocks/mysql/bin/mysqladmin -s ping > /dev/null
done

</post>

</kickstart> 
